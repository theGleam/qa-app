{"version":3,"sources":["components/Header.jsx","data/questions.jsx","components/Toggle.jsx","components/Question/Question.jsx","components/Question/QuestionInput.jsx","components/Question/QuestionList.jsx","components/Answer/Answer.jsx","components/Answer/AnswerInput.jsx","components/Answer/AnswerList.jsx","index.js"],"names":["Header","id","to","Component","initialState","questions","timestamp","title","popularity","answers","reducer","state","action","question","questionIndex","type","console","log","newQuestion","Math","max","map","o","Date","getTime","push","toString","questionID","newAnswer","idArray","currentIds","getNewId","answer","find","answerID","answerIndex","indexOf","splice","Error","createContainer","useReducer","Provider","useTracked","withTracked","props","dispatch","questionsState","Toggle","clickHandler","text","icon","active","large","buttonClass","classNames","iconClass","className","onClick","Question","listClass","this","view","style","zIndex","index","moment","format","length","upVote","downVote","deleteQuestion","QuestionInput","value","onChange","ev","setState","target","disabled","trim","_","QuestionList","order","sortingMethod","enterLeaveAnimation","toggleList","bind","toggleGrid","toggleSortByAnswers","toggleSortByTimestamp","toggleSortByPopularity","sortRotate","sortShuffle","upVoteQuestion","downVoteQuestion","sort","a","b","shuffle","slice","unshift","pop","i","key","questionTitle","hide","location","pathname","includes","staggerDurationBy","duration","enterAnimation","leaveAnimation","typeName","renderQuestions","Answer","deleteAnswer","AnswerInput","AnswerList","questionId","match","params","upVoteAnswer","downVoteAnswer","getAnswers","answerTitle","q","renderAnswers","App","route","childRoutes","path","replace","paths","availablePaths","currentPath","children","ReactDOM","render","component","document","getElementById"],"mappings":"iSAiBeA,E,uKAVX,OACE,4BAAQC,GAAG,UACT,kBAAC,IAAD,CAAMC,GAAG,IAAID,GAAG,QACd,mD,GANWE,a,wDCSfC,EAAe,CACnBC,UAAW,CACT,CAAEJ,GAAI,EAAGK,UAAW,UAAcC,MAAO,kBAAmBC,WAAY,EAAGC,QAAS,IACpF,CAAER,GAAI,EAAGK,UAAW,WAAeC,MAAO,6BAA8BC,WAAY,EAAGC,QAAS,IAChG,CAAER,GAAI,EAAGK,UAAW,WAAeC,MAAO,cAAeC,WAAY,EAAGC,QAAS,IACjF,CAAER,GAAI,EAAGK,UAAW,WAAeC,MAAO,uBAAwBC,WAAY,EAAGC,QAAS,IAC1F,CAAER,GAAI,EAAGK,UAAW,WAAeC,MAAO,kDAAmDC,WAAY,EAAGC,QAAS,IACrH,CAAER,GAAI,EAAGK,UAAW,WAAeC,MAAO,kCAAmCC,WAAY,EAAGC,QAAS,IACrG,CAAER,GAAI,EAAGK,UAAW,QAAeC,MAAO,qBAAsBC,WAAY,EAAGC,QAAS,MAkBtFC,EAAkC,SAACC,EAAOC,GAC9C,IACIC,EACAC,EAFAT,EAAY,GAGhB,OAAQO,EAAOG,MACb,IAAK,cACHV,EAAYM,EAAMN,UAClBW,QAAQC,IAAIZ,GACZW,QAAQC,WAAWZ,GACnB,IAMMa,EAAc,CAClBjB,GAPSkB,KAAKC,IAAL,MAAAD,KAAI,YAASd,EAAUgB,KAAI,SAAAC,GAAC,OAAKA,EAAErB,QAAS,EAQrDK,WAPgB,IAAIiB,MAAOC,UAQ3BjB,MAPYK,EAAOC,SAQnBL,WAPiB,EAQjBC,QAPc,IAWhB,OAFAJ,EAAUoB,KAAKP,GAER,CACLb,aAGJ,IAAK,YAoBH,MAAO,CACLA,UAnBFA,GADAA,EAAYM,EAAMN,WACIgB,KAAI,SAACR,GACzB,GAAIA,EAASZ,GAAGyB,aAAed,EAAOe,WAAWD,WAAY,CAC3DV,QAAQC,IAAI,eACZ,IAKMW,EAAY,CAChB3B,GAvEK,SAAC4B,GAChBb,QAAQC,IAAIY,GACZ,IAAMC,EAAaD,EAAQR,KAAI,SAAAC,GAAC,OAAKA,EAAErB,MACvC,OAAOkB,KAAKC,IAAL,MAAAD,KAAI,YAAQW,IAAc,EA8DdC,CAASlB,EAASJ,SAO3BH,WANgB,IAAIiB,MAAOC,UAO3BjB,MANYK,EAAOoB,OAOnBxB,WANiB,GAQnBK,EAASJ,QAAQgB,KAAKG,GAExB,OAAOf,MAMX,IAAK,eAcH,MAAO,CACLR,UAbFA,GADAA,EAAYM,EAAMN,WACIgB,KAAI,SAACR,GACzB,GAAIA,EAASZ,GAAGyB,aAAed,EAAOe,WAAWD,WAAY,CAC3D,IAAMjB,EAAUI,EAASJ,QACnBuB,EAASvB,EAAQwB,MAAK,SAACD,GAAD,OAAaA,EAAO/B,KAAOW,EAAOsB,YAC9D,GAAMF,EAAQ,CACZ,IAAMG,EAAc1B,EAAQ2B,QAAQJ,GACpCvB,EAAQ4B,OAAOF,EAAa,GAE9BtB,EAASJ,QAAUA,EAErB,OAAOI,MAMX,IAAK,eAaH,MAAO,CACLR,UAZFA,GADAA,EAAYM,EAAMN,WACIgB,KAAI,SAACR,GASzB,OARIA,EAASZ,GAAGyB,aAAed,EAAOe,WAAWD,YAC/Cb,EAASJ,QAAQY,KAAI,SAACW,GAIpB,OAHIA,EAAO/B,KAAOW,EAAOsB,WACvBF,EAAOxB,YAAc,GAEhBwB,KAGJnB,MAMX,IAAK,iBAaH,MAAO,CACLR,UAZFA,GADAA,EAAYM,EAAMN,WACIgB,KAAI,SAACR,GASzB,OARIA,EAASZ,GAAGyB,aAAed,EAAOe,WAAWD,YAC/Cb,EAASJ,QAAQY,KAAI,SAACW,GAIpB,OAHIA,EAAO/B,KAAOW,EAAOsB,WACvBF,EAAOxB,YAAc,GAEhBwB,KAGJnB,MAMX,IAAK,iBASH,OAPAA,GADAR,EAAYM,EAAMN,WACG4B,MAAK,SAACpB,GAAD,OAAeA,EAASZ,KAAOW,EAAOe,cAChEX,QAAQC,IAAIJ,GACNA,IACJC,EAAeT,EAAU+B,QAAQvB,GACjCG,QAAQC,IAAIH,GACZT,EAAUgC,OAAOvB,EAAe,IAE3B,CACLT,aAGJ,IAAK,iBAOH,OALAQ,GADAR,EAAYM,EAAMN,WACG4B,MAAK,SAACpB,GAAD,OAAeA,EAASZ,KAAOW,EAAOe,cAChEb,EAAeT,EAAU+B,QAAQvB,GAC3BA,IACJR,EAAUS,GAAeN,YAAc,GAElC,CACLH,aAGJ,IAAK,mBAOH,OALAQ,GADAR,EAAYM,EAAMN,WACG4B,MAAK,SAACpB,GAAD,OAAeA,EAASZ,KAAOW,EAAOe,cAChEb,EAAeT,EAAU+B,QAAQvB,GAC3BA,IACJR,EAAUS,GAAeN,YAAc,GAElC,CACLH,aAEJ,IAAK,gBAOH,OALAQ,GADAR,EAAYM,EAAMN,WACG4B,MAAK,SAACpB,GAAD,OAAeA,EAASZ,KAAOW,EAAOe,cAChEb,EAAeT,EAAU+B,QAAQvB,GAC3BA,IACJR,EAAUS,GAAeL,QAAUG,EAAOH,SAErC,CACLJ,aAGJ,IAAK,kBACH,MAAO,CACLA,UAAWO,EAAOP,WAEtB,QACE,MAAM,IAAIiC,MAAM,yB,EAMkBC,aAFvB,kBAAMC,qBAAW9B,EAASN,MAE5BqC,E,EAAAA,SAAUC,E,EAAAA,WAEZC,EAAc,SAAAxC,GAAS,OAAI,SAAAyC,GAAU,IAAD,EACrBF,IADqB,mBACxC/B,EADwC,KACjCkC,EADiC,KAE/C,OAAO,kBAAC1C,EAAD,eAAW2C,eAAgBnC,EAAOkC,SAAUA,GAAcD,M,iBCvLpDG,EAjBA,SAAC,GAA+C,IAA9CC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,MAC3CC,EAAcC,IAAW,CAC7B,iBAAiB,EACjB,WAAYJ,EACZC,SACAC,UAEIG,EAAS,sBAAkBL,GAEjC,OACE,4BAAQM,UAAWH,EAAaI,QAAST,GACvC,uBAAGQ,UAAWD,IACbN,I,iBCXMS,EAAb,uKAEI,IAAMC,EAAS,yBAAqBC,KAAKhB,MAAMiB,MACzCC,EAAQ,CAAEC,OAAQ,IAAMH,KAAKhB,MAAMoB,OAEzC,OACE,wBAAI/D,GAAI2D,KAAKhB,MAAM3C,GAAIuD,UAAWG,EAAWG,MAAOA,GAClD,kBAAC,IAAD,CAAM5D,GAAE,oBAAe0D,KAAKhB,MAAM3C,KAChC,6BACE,4BAAK2D,KAAKhB,MAAMrC,OAChB,4BAAK0D,IAAOL,KAAKhB,MAAMtC,WAAW4D,OAAO,iBACzC,2CAAiBN,KAAKhB,MAAMpC,YAC5B,wCAAcoD,KAAKhB,MAAMnC,QAAQ0D,UAInC,yBAAKX,UAAU,oBACb,4BAAQC,QAASG,KAAKhB,MAAMwB,QAC1B,uBAAGZ,UAAU,oBAEf,4BAAQC,QAASG,KAAKhB,MAAMyB,UAC1B,uBAAGb,UAAU,sBAEf,4BAAQC,QAASG,KAAKhB,MAAM0B,gBAC1B,uBAAGd,UAAU,uBAxB3B,GAA8BrD,aCFjBoE,EAAb,kDACE,WAAY3B,GAAQ,IAAD,8BACjB,cAAMA,IACDjC,MAAQ,CACXO,YAAa,IAHE,EADrB,qDAQY,IAAD,OACDyC,EAAS,yBAAqBC,KAAKhB,MAAMiB,MAG/C,OACE,wBAAI5D,GAAG,SAASuD,UAAWG,EAAWG,MAH1B,CAAEC,OAAQ,MAIpB,yBAAKP,UAAU,wBACb,wBAAIA,UAAU,cAAd,gBACA,yBAAKA,UAAU,SACb,2BACEzC,KAAK,OACLyD,MAAOZ,KAAKjD,MAAMO,YAClBuD,SAAU,SAAAC,GAAE,OAAI,EAAKC,SACnB,CACEzD,YAAawD,EAAGE,OAAOJ,aAKjC,4BACEK,UAAWjB,KAAKjD,MAAMO,YAAY4D,OAClCrB,QAAS,SAACsB,GACR,EAAKnC,MAAMI,aAAa,EAAKrC,MAAMO,aACnC,EAAKyD,SACH,CACEzD,YAAa,OAInB,uBAAGsC,UAAU,oBArCvB,GAAmCrD,aCmQpB6E,G,MAFarC,E,kDAvP1B,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDjC,MAAQ,CACXkD,KAAM,OACNoB,MAAO,MACPC,cAAe,gBACfC,oBAAqB,oBACrB9E,UAAW,EAAKuC,MAAME,eAAezC,WAGvC,EAAK+E,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKE,oBAAsB,EAAKA,oBAAoBF,KAAzB,gBAC3B,EAAKG,sBAAwB,EAAKA,sBAAsBH,KAA3B,gBAC7B,EAAKI,uBAAyB,EAAKA,uBAAuBJ,KAA5B,gBAC9B,EAAKK,WAAa,EAAKA,WAAWL,KAAhB,gBAClB,EAAKM,YAAc,EAAKA,YAAYN,KAAjB,gBACnB,EAAKnE,YAAc,EAAKA,YAAYmE,KAAjB,gBACnB,EAAKO,eAAiB,EAAKA,eAAeP,KAApB,gBACtB,EAAKf,eAAiB,EAAKA,eAAee,KAApB,gBACtB,EAAKQ,iBAAmB,EAAKA,iBAAiBR,KAAtB,gBApBP,E,yDAgCjBzB,KAAKe,SAAS,CACZd,KAAM,OACNsB,oBAAqB,wB,mCAKvBvB,KAAKe,SAAS,CACZd,KAAM,OACNsB,oBAAqB,0B,4CAQvBvB,KAAKe,SAAS,CACZM,MAA6B,QAArBrB,KAAKjD,MAAMsE,MAAkB,OAAS,MAC9CC,cAAe,UACf7E,UAAWuD,KAAKjD,MAAMN,UAAUyF,KACT,QAArBlC,KAAKjD,MAAMsE,MANE,SAACc,EAAGC,GAAJ,OAAUA,EAAEvF,QAAQ0D,OAAS4B,EAAEtF,QAAQ0D,QADxC,SAAC4B,EAAGC,GAAJ,OAAUD,EAAEtF,QAAQ0D,OAAS6B,EAAEvF,QAAQ0D,a,+CAgBvDP,KAAKe,SAAS,CACZM,MAA6B,QAArBrB,KAAKjD,MAAMsE,MAAkB,OAAS,MAC9CC,cAAe,aACf7E,UAAWuD,KAAKjD,MAAMN,UAAUyF,KACT,QAArBlC,KAAKjD,MAAMsE,MANE,SAACc,EAAGC,GAAJ,OAAUA,EAAExF,WAAauF,EAAEvF,YAD5B,SAACuF,EAAGC,GAAJ,OAAUD,EAAEvF,WAAawF,EAAExF,iB,8CAgB3CoD,KAAKe,SAAS,CACZM,MAA6B,QAArBrB,KAAKjD,MAAMsE,MAAkB,OAAS,MAC9CC,cAAe,gBACf7E,UAAWuD,KAAKjD,MAAMN,UAAUyF,KACT,QAArBlC,KAAKjD,MAAMsE,MANE,SAACc,EAAGC,GAAJ,OAAUA,EAAE1F,UAAYyF,EAAEzF,WAD3B,SAACyF,EAAGC,GAAJ,OAAUD,EAAEzF,UAAY0F,EAAE1F,gB,oCAa1CsD,KAAKe,SAAS,CACZO,cAAe,UACf7E,UAAW4F,IAAQrC,KAAKjD,MAAMN,e,mCAKhC,IAAMA,EAAYuD,KAAKjD,MAAMN,UAAU6F,QACvC7F,EAAU8F,QAAQ9F,EAAU+F,OAE5BxC,KAAKe,SAAS,CACZO,cAAe,SACf7E,gB,wCAIe,IAAD,OAChB,OAAOuD,KAAKjD,MAAMN,UAAUgB,KAAI,SAACR,EAAUwF,GACzC,OACE,kBAAC,EAAD,eACEC,IAAKzF,EAASZ,GACd4D,KAAM,EAAKlD,MAAMkD,KACjBG,MAAOqC,EACPjC,OAAQ,kBAAM,EAAKwB,eAAe/E,EAASZ,KAC3CoE,SAAU,kBAAM,EAAKwB,iBAAiBhF,EAASZ,KAC/CqE,eAAgB,kBAAM,EAAKA,eAAezD,EAASZ,MAC/CY,S,kCAMA0F,IAEV1D,EADqBe,KAAKhB,MAAlBC,UACC,CAAEhC,SAAU0F,EAAexF,KAAM,gBAC1C,IAAMV,EAAYuD,KAAKjD,MAAMN,UAC7BuD,KAAKe,SAAS,CAAEtE,gB,qCAGHsB,GAAa,IAClBkB,EAAae,KAAKhB,MAAlBC,SACR7B,QAAQC,IAAIU,GACZkB,EAAS,CAAElB,WAAYA,EAAYZ,KAAM,mBACzC,IAAMV,EAAYuD,KAAKjD,MAAMN,UAC7BuD,KAAKe,SAAS,CAAEtE,gB,qCAGHsB,GAAa,IAElBkB,EAAae,KAAKhB,MAAlBC,SACR7B,QAAQC,IAAIU,GAEZkB,EAAS,CAAElB,WAAYA,EAAYZ,KAAM,mBACzC,IAAMV,EAAYuD,KAAKjD,MAAMN,UAC7BW,QAAQC,IAAIZ,GACZW,QAAQC,IAAIZ,EAAU8D,QACtBP,KAAKe,SAAS,CAAEtE,gB,uCAGDsB,GAAa,IACpBkB,EAAae,KAAKhB,MAAlBC,SACR7B,QAAQC,IAAIU,GAEZkB,EAAS,CAAElB,WAAYA,EAAYZ,KAAM,qBACzC,IAAMV,EAAYuD,KAAKjD,MAAMN,UAC7BuD,KAAKe,SAAS,CAAEtE,gB,+BAIhB,IAAMmG,EAAO5C,KAAKhB,MAAM6D,SAASC,SAASC,SAAS,YACnD,OACE,yBAAK1G,GAAG,YAAYuD,UAAS,UAAKI,KAAKjD,MAAMkD,KAAhB,YAAwB2C,EAAO,OAAS,KACnE,4BAAQvG,GAAG,UACT,0CAAgB2D,KAAKjD,MAAMN,UAAU8D,OAArC,MAEF,gCACE,yBAAKX,UAAU,YACb,kBAAC,EAAD,CACER,aAAcY,KAAKwB,WACnBnC,KAAK,OAAOC,KAAK,OACjBC,OAA4B,SAApBS,KAAKjD,MAAMkD,OAErB,kBAAC,EAAD,CACEb,aAAcY,KAAK0B,WACnBrC,KAAK,OAAOC,KAAK,KACjBC,OAA4B,SAApBS,KAAKjD,MAAMkD,QAGvB,yBAAKL,UAAU,aACb,kBAAC,EAAD,CACER,aAAcY,KAAK6B,uBACnBxC,KAAM,aACNC,KAA2B,QAArBU,KAAKjD,MAAMsE,MAAkB,WAAa,aAChD9B,OAAqC,eAA7BS,KAAKjD,MAAMuE,gBAErB,kBAAC,EAAD,CACElC,aAAcY,KAAK2B,oBACnBtC,KAAM,UACNC,KAA2B,QAArBU,KAAKjD,MAAMsE,MAAkB,WAAa,aAChD9B,OAAqC,YAA7BS,KAAKjD,MAAMuE,gBAErB,kBAAC,EAAD,CACElC,aAAcY,KAAK4B,sBACnBvC,KAAM,OACNC,KAA2B,QAArBU,KAAKjD,MAAMsE,MAAkB,WAAa,aAChD9B,OAAqC,kBAA7BS,KAAKjD,MAAMuE,gBAErB,kBAAC,EAAD,CACElC,aAAcY,KAAK+B,YACnB1C,KAAK,UAAUC,KAAK,SACpBC,OAAqC,YAA7BS,KAAKjD,MAAMuE,gBAErB,kBAAC,EAAD,CACElC,aAAcY,KAAK8B,WACnBzC,KAAK,SAASC,KAAK,UACnBC,OAAqC,WAA7BS,KAAKjD,MAAMuE,kBAIzB,6BACE,kBAAC,IAAD,CACE0B,kBAAkB,KAClBC,SAAU,IACVC,eAAgBlD,KAAKjD,MAAMwE,oBAC3B4B,eAAgBnD,KAAKjD,MAAMwE,oBAC3B6B,SAAS,MAERpD,KAAKqD,kBAEN,kBAAC,EAAD,CACEX,IAAI,SACJzC,KAAMD,KAAKjD,MAAMkD,KACjBG,MAAOJ,KAAKjD,MAAMN,UAAU8D,OAC5BnB,aAAcY,KAAK1C,qB,GA3NDf,eCRnB+G,G,MAAb,uKAEI,IAAMvD,EAAS,yBAAqBC,KAAKhB,MAAMiB,MACzCC,EAAQ,CAAEC,OAAQ,IAAMH,KAAKhB,MAAMoB,OAEzC,OACE,wBAAI/D,GAAI2D,KAAKhB,MAAM3C,GAAIuD,UAAWG,EAAWG,MAAOA,GAClD,6BACE,4BAAKF,KAAKhB,MAAMrC,OAChB,4BAAK0D,IAAOL,KAAKhB,MAAMtC,WAAW4D,OAAO,iBACzC,2CAAiBN,KAAKhB,MAAMpC,aAG9B,yBAAKgD,UAAU,oBACb,4BAAQC,QAASG,KAAKhB,MAAMwB,QAC1B,uBAAGZ,UAAU,oBAEf,4BAAQC,QAASG,KAAKhB,MAAMyB,UAC1B,uBAAGb,UAAU,sBAEf,4BAAQC,QAASG,KAAKhB,MAAMuE,cAC1B,uBAAG3D,UAAU,uBArBzB,GAA4BrD,cCDfiH,EAAb,kDACE,WAAYxE,GAAQ,IAAD,8BACjB,cAAMA,IACDjC,MAAQ,CACXiB,UAAW,IAHI,EADrB,qDAQY,IAAD,OACD+B,EAAS,yBAAqBC,KAAKhB,MAAMiB,MAG/C,OACE,wBAAI5D,GAAG,SAASuD,UAAWG,EAAWG,MAH1B,CAAEC,OAAQ,MAIpB,yBAAKP,UAAU,wBACb,wBAAIA,UAAU,cAAd,cACA,yBAAKA,UAAU,SACb,2BACEzC,KAAK,OACLyD,MAAOZ,KAAKjD,MAAMiB,UAClB6C,SAAU,SAAAC,GAAE,OAAI,EAAKC,SACnB,CACE/C,UAAW8C,EAAGE,OAAOJ,aAK/B,4BACEK,UAAWjB,KAAKjD,MAAMiB,UAAUkD,OAChCrB,QAAS,SAACsB,GACR,EAAKnC,MAAMI,aAAa,EAAKrC,MAAMiB,WACnC,EAAK+C,SACH,CACE/C,UAAW,OAIjB,uBAAG4B,UAAU,oBArCvB,GAAiCrD,aCuOlBkH,G,MAFW1E,E,kDAzNxB,WAAYC,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAI0E,EAAa1E,EAAM2E,MAAMC,OAAOvH,GAFnB,OAGjB,EAAKU,MAAQ,CACX2G,aACAzD,KAAM,OACNoB,MAAO,MACPC,cAAe,gBACfC,oBAAqB,oBACrB9E,UAAW,EAAKuC,MAAME,eAAezC,UACrCI,QAAS,IAGX,EAAK2E,WAAa,EAAKA,WAAWC,KAAhB,gBAClB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAClB,EAAKG,sBAAwB,EAAKA,sBAAsBH,KAA3B,gBAC7B,EAAKI,uBAAyB,EAAKA,uBAAuBJ,KAA5B,gBAC9B,EAAKK,WAAa,EAAKA,WAAWL,KAAhB,gBAClB,EAAKM,YAAc,EAAKA,YAAYN,KAAjB,gBACnB,EAAKzD,UAAY,EAAKA,UAAUyD,KAAf,gBACjB,EAAKoC,aAAe,EAAKA,aAAapC,KAAlB,gBACpB,EAAK8B,aAAe,EAAKA,aAAa9B,KAAlB,gBACpB,EAAKqC,eAAiB,EAAKA,eAAerC,KAApB,gBACtB,EAAKsC,WAAa,EAAKA,WAAWtC,KAAhB,gBAvBD,E,gEA2BjBzB,KAAKe,SAAS,CAAElE,QAASmD,KAAK+D,e,mCAGlB,IAAD,OACX,OAAO/D,KAAKjD,MAAMN,UAAU4B,MAAK,SAACpB,GAAD,OAC/BA,EAASZ,GAAGyB,aAAe,EAAKf,MAAM2G,WAAW5F,cAAYjB,U,mCAI/DmD,KAAKe,SAAS,CACZd,KAAM,OACNsB,oBAAqB,wB,mCAKvBvB,KAAKe,SAAS,CACZd,KAAM,OACNsB,oBAAqB,0B,+CAQvBvB,KAAKe,SAAS,CACZM,MAA6B,QAArBrB,KAAKjD,MAAMsE,MAAkB,OAAS,MAC9CC,cAAe,aACfzE,QAASmD,KAAKjD,MAAMF,QAAQqF,KACL,QAArBlC,KAAKjD,MAAMsE,MANE,SAACc,EAAGC,GAAJ,OAAUA,EAAExF,WAAauF,EAAEvF,YAD5B,SAACuF,EAAGC,GAAJ,OAAUD,EAAEvF,WAAawF,EAAExF,iB,8CAgB3CoD,KAAKe,SAAS,CACZM,MAA6B,QAArBrB,KAAKjD,MAAMsE,MAAkB,OAAS,MAC9CC,cAAe,gBACfzE,QAASmD,KAAKjD,MAAMF,QAAQqF,KACL,QAArBlC,KAAKjD,MAAMsE,MANE,SAACc,EAAGC,GAAJ,OAAUA,EAAE1F,UAAYyF,EAAEzF,WAD3B,SAACyF,EAAGC,GAAJ,OAAUD,EAAEzF,UAAY0F,EAAE1F,gB,oCAa1CsD,KAAKe,SAAS,CACZO,cAAe,UACfzE,QAASwF,IAAQrC,KAAKjD,MAAMF,a,mCAK9B,IAAMA,EAAUmD,KAAKjD,MAAMF,QAAQyF,QACnCzF,EAAQ0F,QAAQ1F,EAAQ2F,OAExBxC,KAAKe,SAAS,CACZO,cAAe,SACfzE,c,sCAIa,IAAD,OAEd,OADgBmD,KAAK+D,aACNtG,KAAI,SAACW,EAAQqE,GAC1B,OACE,kBAAC,EAAD,eACEC,IAAKtE,EAAO/B,GACZ4D,KAAM,EAAKlD,MAAMkD,KACjBG,MAAOqC,EACPjC,OAAQ,kBAAM,EAAKqD,aAAazF,EAAO/B,KACvCoE,SAAU,kBAAM,EAAKqD,eAAe1F,EAAO/B,KAC3CkH,aAAc,kBAAM,EAAKA,aAAanF,EAAO/B,MACzC+B,S,gCAMF4F,IAER/E,EADqBe,KAAKhB,MAAlBC,UACC,CACPlB,WAAYiC,KAAKjD,MAAM2G,WACvBtF,OAAQ4F,EAAa7G,KAAM,cAE7B,IAAMN,EAAUmD,KAAK+D,aACrB/D,KAAKe,SAAS,CAAElE,c,mCAGLyB,IAEXW,EADqBe,KAAKhB,MAAlBC,UACC,CACPlB,WAAYiC,KAAKjD,MAAM2G,WACvBpF,SAAUA,EAAUnB,KAAM,iBAE5B,IAAMN,EAAUmD,KAAK+D,aACrB/D,KAAKe,SAAS,CAAElE,c,mCAGLyB,IAEXW,EADqBe,KAAKhB,MAAlBC,UACC,CAAElB,WAAYiC,KAAKjD,MAAM2G,WAAYpF,SAAUA,EAAUnB,KAAM,iBACxE,IAAMN,EAAUmD,KAAK+D,aACrB/D,KAAKe,SAAS,CAAElE,c,qCAGHyB,IAGbW,EAFqBe,KAAKhB,MAAlBC,UAEC,CACPlB,WAAYiC,KAAKjD,MAAM2G,WACvBpF,SAAUA,EAAUnB,KAAM,mBAE5B,IAAMN,EAAUmD,KAAK+D,aACrB/D,KAAKe,SAAS,CAAElE,c,+BAGR,IAAD,OACHI,EAAW+C,KAAKjD,MAAMN,UAAU4B,MAAK,SAAA4F,GAAC,OAAEA,EAAE5H,GAAGyB,aAAa,EAAKf,MAAM2G,cACzE,OACE,yBAAKrH,GAAG,UAAUuD,UAAWI,KAAKjD,MAAMkD,MACtC,4BAAQ5D,GAAG,UACT,mDAAqBY,EAASN,MAA9B,cAAyCM,EAASJ,QAAQ0D,OAA1D,OAEF,gCACE,yBAAKX,UAAU,YACb,kBAAC,IAAD,CAAMtD,GAAG,KACP,kBAAC,EAAD,CACE8C,aAAcY,KAAK0B,WACnBrC,KAAK,OAAOC,KAAK,KACjBC,OAA4B,SAApBS,KAAKjD,MAAMkD,QAGvB,kBAAC,EAAD,CACEb,aAAcY,KAAKwB,WACnBnC,KAAK,OAAOC,KAAK,OACjBC,OAA4B,SAApBS,KAAKjD,MAAMkD,QAGvB,yBAAKL,UAAU,aACb,kBAAC,EAAD,CACER,aAAcY,KAAK6B,uBACnBxC,KAAM,aACNC,KAA2B,QAArBU,KAAKjD,MAAMsE,MAAkB,WAAa,aAChD9B,OAAqC,eAA7BS,KAAKjD,MAAMuE,gBAErB,kBAAC,EAAD,CACElC,aAAcY,KAAK4B,sBACnBvC,KAAM,OACNC,KAA2B,QAArBU,KAAKjD,MAAMsE,MAAkB,WAAa,aAChD9B,OAAqC,kBAA7BS,KAAKjD,MAAMuE,gBAErB,kBAAC,EAAD,CACElC,aAAcY,KAAK+B,YACnB1C,KAAK,UAAUC,KAAK,SACpBC,OAAqC,YAA7BS,KAAKjD,MAAMuE,gBAErB,kBAAC,EAAD,CACElC,aAAcY,KAAK8B,WACnBzC,KAAK,SAASC,KAAK,UACnBC,OAAqC,WAA7BS,KAAKjD,MAAMuE,kBAIzB,6BACE,kBAAC,IAAD,CACE0B,kBAAkB,KAClBC,SAAU,IACVC,eAAgBlD,KAAKjD,MAAMwE,oBAC3B4B,eAAgBnD,KAAKjD,MAAMwE,oBAC3B6B,SAAS,MAERpD,KAAKkE,gBAEN,kBAAC,EAAD,CACExB,IAAI,SACJzC,KAAMD,KAAKjD,MAAMkD,KACjBG,MAAOJ,KAAKjD,MAAMF,QAAQ0D,OAC1BnB,aAAcY,KAAKhC,mB,GAjNHzB,eCDxB4H,E,+KACe,OAAOnE,KAAKhB,MAAMoF,MAAMC,YAAY5G,KAAI,SAAA2G,GAAK,OAAIA,EAAME,U,oCAC1D,OAAOtE,KAAKhB,MAAM6D,SAASC,SAASyB,QAAQ,MAAO,M,+BAGjE,OACE,yBAAK3E,UAAU,OACb,kBAAC,EAAD,CAAQ4E,MAAOxE,KAAKyE,iBAAkBH,KAAMtE,KAAK0E,gBACjD,6BAASrI,GAAG,gBACT2D,KAAKhB,MAAM2F,e,GATJpI,aAkBlBqI,IAASC,OACP,kBAAC,IAAD,KACE,kBAAChG,EAAD,KACE,kBAAC,IAAD,CAAOyF,KAAK,IAAIQ,UAAWX,GACzB,kBAAC,IAAD,CAAOW,UAAW1D,IAClB,kBAAC,IAAD,CAAOkD,KAAK,gBAAgBQ,UAAWrB,OAG3BsB,SAASC,eAAe,W","file":"static/js/main.93f7f59e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\n\nclass Header extends Component {\n\n  render() {\n    return (\n      <header id=\"header\">\n        <Link to=\"/\" id=\"logo\">\n          <h2>Questions App</h2>\n        </Link>\n      </header>\n    );\n  }\n};\n\nexport default Header;\n","import React, { useReducer, Reducer } from \"react\";\n\nimport { createContainer } from \"react-tracked\";\n\n// const { currencies, geolocalization, rates } = useContext(ShopContext);\n\n\nconst getNewId = (idArray) => {\n  console.log(idArray);\n  const currentIds = idArray.map(o => (o.id));\n  return Math.max(...currentIds) + 1;\n}\n\nconst initialState = {\n  questions: [\n    { id: 1, timestamp: 811396800000, title: 'How to be good?', popularity: 0, answers: [], },\n    { id: 2, timestamp: 1108702800000, title: 'Is there life after death?', popularity: 0, answers: [], },\n    { id: 3, timestamp: 1156564800000, title: 'Who is God?', popularity: 0, answers: [], },\n    { id: 4, timestamp: 1256443200000, title: 'Why do I like Girls?', popularity: 0, answers: [], },\n    { id: 5, timestamp: 1286942400000, title: 'How can I make a girl want to have sex with me?', popularity: 0, answers: [], },\n    { id: 6, timestamp: 1331697600000, title: 'How to do in know she loves me?', popularity: 0, answers: [], },\n    { id: 7, timestamp: 1369800000000, title: 'Why am I on earth?', popularity: 0, answers: [], }\n  ],\n};\n\ntype State = typeof initialState;\n\ntype Action =\n  | { type: \"addQuestion\"; question: string }\n  | { type: \"addAnswer\"; questionID: number, answer: string }\n  | { type: \"deleteQuestion\"; questionID: number } // increase popularity\n  | { type: \"upVoteQuestion\"; questionID: number } // increase popularity\n  | { type: \"downVoteQuestion\"; questionID: number } // decrease popularity\n  | { type: \"deleteAnswer\"; questionID: number, answerID: number } // increase popularity\n  | { type: \"upVoteAnswer\"; questionID: number, answerID: number } // increase popularity\n  | { type: \"downVoteAnswer\"; questionID: number, answerID: number } // decrease popularity\n  | { type: \"updateAnswers\"; questionID: number; answers: [] }\n  | { type: \"updateQuestions\"; questions: [] };\n\nconst reducer: Reducer<State, Action> = (state, action) => {\n  let questions = []\n  let question;\n  let questionIndex;\n  switch (action.type) {\n    case \"addQuestion\":\n      questions = state.questions;\n      console.log(questions);\n      console.log(typeof(questions));\n      const id = Math.max(...(questions.map(o => (o.id)))) + 1;\n      const timestamp = new Date().getTime();\n      const title = action.question;\n      const popularity = 0;\n      const answers = [];\n\n      const newQuestion = {\n        id,\n        timestamp,\n        title,\n        popularity,\n        answers,\n      }\n      questions.push(newQuestion)\n\n      return {\n        questions\n      };\n\n    case \"addAnswer\":\n      questions = state.questions;\n      questions = questions.map((question) => {\n        if (question.id.toString() === action.questionID.toString()) {\n          console.log(\"wegor here!\");\n          const id = getNewId(question.answers);\n          const timestamp = new Date().getTime();\n          const title = action.answer;\n          const popularity = 0;\n\n          const newAnswer = {\n            id,\n            timestamp,\n            title,\n            popularity,\n          }\n          question.answers.push(newAnswer)\n        }\n        return question;\n      })\n      return {\n        questions\n      };\n\n    case \"deleteAnswer\":\n      questions = state.questions;\n      questions = questions.map((question) => {\n        if (question.id.toString() === action.questionID.toString()) {\n          const answers = question.answers;\n          const answer = answers.find((answer) => (answer.id === action.answerID));\n          if (!!answer) {\n            const answerIndex = answers.indexOf(answer);\n            answers.splice(answerIndex, 1)\n          }\n          question.answers = answers;\n        }\n        return question;\n      })\n      return {\n        questions\n      };\n\n    case \"upVoteAnswer\":\n      questions = state.questions;\n      questions = questions.map((question) => {\n        if (question.id.toString() === action.questionID.toString()) {\n          question.answers.map((answer) => {\n            if (answer.id === action.answerID) {\n              answer.popularity += 1;\n            }\n            return answer;\n          })\n        }\n        return question;\n      })\n      return {\n        questions\n      };\n\n    case \"downVoteAnswer\":\n      questions = state.questions;\n      questions = questions.map((question) => {\n        if (question.id.toString() === action.questionID.toString()) {\n          question.answers.map((answer) => {\n            if (answer.id === action.answerID) {\n              answer.popularity -= 1;\n            }\n            return answer;\n          })\n        }\n        return question;\n      })\n      return {\n        questions\n      };\n\n    case \"deleteQuestion\":\n      questions = state.questions;\n      question = questions.find((question) => (question.id === action.questionID));\n      console.log(question);\n      if (!!question) {\n        questionIndex= questions.indexOf(question);\n        console.log(questionIndex);\n        questions.splice(questionIndex, 1)\n      }\n      return {\n        questions\n      };\n\n    case \"upVoteQuestion\":\n      questions = state.questions;\n      question = questions.find((question) => (question.id === action.questionID));\n      questionIndex= questions.indexOf(question);\n      if (!!question) {\n        questions[questionIndex].popularity += 1;\n      }\n      return {\n        questions\n      };\n\n    case \"downVoteQuestion\":\n      questions = state.questions;\n      question = questions.find((question) => (question.id === action.questionID));\n      questionIndex= questions.indexOf(question);\n      if (!!question) {\n        questions[questionIndex].popularity -= 1;\n      }\n      return {\n        questions\n      };\n    case \"updateAnswers\":\n      questions = state.questions;\n      question = questions.find((question) => (question.id === action.questionID));\n      questionIndex= questions.indexOf(question);\n      if (!!question) {\n        questions[questionIndex].answers = action.answers;\n      }\n      return {\n        questions\n      };\n\n    case \"updateQuestions\":\n      return {\n        questions: action.questions\n      };\n    default:\n      throw new Error(\"unknown action type\");\n  }\n};\n\nconst useValue = () => useReducer(reducer, initialState);\n\nexport const { Provider, useTracked } = createContainer(useValue);\n\nexport const withTracked = Component => props => {\n  const [state, dispatch] = useTracked();\n  return <Component questionsState={state} dispatch={dispatch} {...props} />;\n};\n\n","import classNames from 'classnames';\nimport React from 'react';\n\nconst Toggle = ({clickHandler, text, icon, active, large}) => {\n  const buttonClass = classNames({\n    'button-toggle': true,\n    'no-icon': !icon,\n    active,\n    large,\n  });\n  const iconClass = `fa fa-fw fa-${icon}`;\n\n  return (\n    <button className={buttonClass} onClick={clickHandler}>\n      <i className={iconClass} />\n      {text}\n    </button>\n  );\n};\n\nexport default Toggle;\n","import moment from 'moment';\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nexport class Question extends Component {\n  render() {\n    const listClass = `list-item card ${this.props.view}`;\n    const style = { zIndex: 100 - this.props.index };\n\n    return (\n      <li id={this.props.id} className={listClass} style={style}>\n        <Link to={`/question/${this.props.id}`}>\n          <div>\n            <h3>{this.props.title}</h3>\n            <h5>{moment(this.props.timestamp).format('Do MMM, YYYY')}</h5>\n            <h5>Popularity: {this.props.popularity}</h5>\n            <h5>Answers: {this.props.answers.length}</h5>\n          </div>\n        </Link>\n          {/* <h3>{this.props.popul}</h3> */}\n          <div className=\"button-container\">\n            <button onClick={this.props.upVote}>\n              <i className=\"fa fa-arrow-up\" />\n            </button>\n            <button onClick={this.props.downVote}>\n              <i className=\"fa fa-arrow-down\" />\n            </button>\n            <button onClick={this.props.deleteQuestion}>\n              <i className=\"fa fa-close\" />\n            </button>\n          </div>\n      </li>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\n\nexport class QuestionInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newQuestion: \"\"\n    };\n  }\n\n  render() {\n    const listClass = `list-item card ${this.props.view}`;\n    const style = { zIndex: 100 };\n\n    return (\n      <li id=\"qinput\" className={listClass} style={style}>\n        <div className=\"col col-3 input-area\">\n          <h5 className=\"field-name\">New Question</h5>\n          <div className=\"input\">\n            <input\n              type=\"text\"\n              value={this.state.newQuestion}\n              onChange={ev => this.setState(\n                {\n                  newQuestion: ev.target.value\n                })}\n            />\n          </div>\n        </div>\n        <button\n          disabled={!this.state.newQuestion.trim()}\n          onClick={(_) => {\n            this.props.clickHandler(this.state.newQuestion);\n            this.setState(\n              {\n                newQuestion: \"\"\n              });\n          }}\n        >\n          <i className=\"fa fa-add\" />\n        </button>\n      </li>\n    );\n  }\n}\n","import shuffle from 'lodash/shuffle';\nimport React, { Component } from 'react';\nimport FlipMove from 'react-flip-move';\nimport { withTracked } from '../../data/questions';\nimport Toggle from '../Toggle.jsx';\nimport { Question } from './Question';\nimport { QuestionInput } from './QuestionInput';\nimport './scss/index.scss';\n\n\n\nclass QuestionListClass extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      view: 'list',\n      order: 'asc',\n      sortingMethod: 'chronological',\n      enterLeaveAnimation: 'accordionVertical',\n      questions: this.props.questionsState.questions,\n    };\n\n    this.toggleList = this.toggleList.bind(this);\n    this.toggleGrid = this.toggleGrid.bind(this);\n    this.toggleSortByAnswers = this.toggleSortByAnswers.bind(this);\n    this.toggleSortByTimestamp = this.toggleSortByTimestamp.bind(this);\n    this.toggleSortByPopularity = this.toggleSortByPopularity.bind(this);\n    this.sortRotate = this.sortRotate.bind(this);\n    this.sortShuffle = this.sortShuffle.bind(this);\n    this.newQuestion = this.newQuestion.bind(this);\n    this.upVoteQuestion = this.upVoteQuestion.bind(this);\n    this.deleteQuestion = this.deleteQuestion.bind(this);\n    this.downVoteQuestion = this.downVoteQuestion.bind(this);\n  }\n\n  // componentDidMount() {\n  //   const [questionsState, dispatch] = this.props;\n  //   this.setState({\n  //     questions: questionsState.questions\n  //   })\n  //   this.toggleSortByPopularity\n  // }\n\n  toggleList() {\n    this.setState({\n      view: 'list',\n      enterLeaveAnimation: 'accordionVertical'\n    });\n  }\n\n  toggleGrid() {\n    this.setState({\n      view: 'grid',\n      enterLeaveAnimation: 'accordionHorizontal'\n    });\n  }\n\n  toggleSortByAnswers() {\n    const sortAsc = (a, b) => a.answers.length - b.answers.length;\n    const sortDesc = (a, b) => b.answers.length - a.answers.length;\n\n    this.setState({\n      order: (this.state.order === 'asc' ? 'desc' : 'asc'),\n      sortingMethod: 'answers',\n      questions: this.state.questions.sort(\n        this.state.order === 'asc' ? sortDesc : sortAsc\n      )\n    });\n  }\n\n  toggleSortByPopularity() {\n    const sortAsc = (a, b) => a.popularity - b.popularity;\n    const sortDesc = (a, b) => b.popularity - a.popularity;\n\n    this.setState({\n      order: (this.state.order === 'asc' ? 'desc' : 'asc'),\n      sortingMethod: 'popularity',\n      questions: this.state.questions.sort(\n        this.state.order === 'asc' ? sortDesc : sortAsc\n      )\n    });\n  }\n\n  toggleSortByTimestamp() {\n    const sortAsc = (a, b) => a.timestamp - b.timestamp;\n    const sortDesc = (a, b) => b.timestamp - a.timestamp;\n\n    this.setState({\n      order: (this.state.order === 'asc' ? 'desc' : 'asc'),\n      sortingMethod: 'chronological',\n      questions: this.state.questions.sort(\n        this.state.order === 'asc' ? sortDesc : sortAsc\n      )\n    });\n  }\n\n  sortShuffle() {\n    this.setState({\n      sortingMethod: 'shuffle',\n      questions: shuffle(this.state.questions)\n    });\n  }\n\n  sortRotate() {\n    const questions = this.state.questions.slice();\n    questions.unshift(questions.pop())\n\n    this.setState({\n      sortingMethod: 'rotate',\n      questions\n    });\n  }\n\n  renderQuestions() {\n    return this.state.questions.map((question, i) => {\n      return (\n        <Question\n          key={question.id}\n          view={this.state.view}\n          index={i}\n          upVote={() => this.upVoteQuestion(question.id)}\n          downVote={() => this.downVoteQuestion(question.id)}\n          deleteQuestion={() => this.deleteQuestion(question.id)}\n          {...question}\n        />\n      );\n    });\n  }\n\n  newQuestion(questionTitle) {\n    const { dispatch } = this.props;\n    dispatch({ question: questionTitle, type: \"addQuestion\" });\n    const questions = this.state.questions;\n    this.setState({ questions }); // force call the render function again\n  }\n\n  upVoteQuestion(questionID) {\n    const { dispatch } = this.props;\n    console.log(questionID)\n    dispatch({ questionID: questionID, type: \"upVoteQuestion\" });\n    const questions = this.state.questions;\n    this.setState({ questions }); // force call the render function again\n  }\n\n  deleteQuestion(questionID) {\n\n    const { dispatch } = this.props;\n    console.log(questionID)\n\n    dispatch({ questionID: questionID, type: \"deleteQuestion\" });\n    const questions = this.state.questions;\n    console.log(questions);\n    console.log(questions.length);\n    this.setState({ questions }); // force call the render function again\n  }\n\n  downVoteQuestion(questionID) {\n    const { dispatch } = this.props;\n    console.log(questionID)\n\n    dispatch({ questionID: questionID, type: \"downVoteQuestion\" });\n    const questions = this.state.questions;\n    this.setState({ questions }); // force call the render function again\n  }\n\n  render() {\n    const hide = this.props.location.pathname.includes(\"question\");\n    return (\n      <div id=\"questions\" className={`${this.state.view} ${hide ? \"hide\" : \"\"}`}>\n        <header id=\"header\">\n          <h2>Questions ({this.state.questions.length})</h2>\n        </header>\n        <header>\n          <div className=\"abs-left\">\n            <Toggle\n              clickHandler={this.toggleList}\n              text=\"List\" icon=\"list\"\n              active={this.state.view === 'list'}\n            />\n            <Toggle\n              clickHandler={this.toggleGrid}\n              text=\"Grid\" icon=\"th\"\n              active={this.state.view === 'grid'}\n            />\n          </div>\n          <div className=\"abs-right\">\n            <Toggle\n              clickHandler={this.toggleSortByPopularity}\n              text={'Popularity'}\n              icon={this.state.order === 'asc' ? 'angle-up' : 'angle-down'}\n              active={this.state.sortingMethod === 'popularity'}\n            />\n            <Toggle\n              clickHandler={this.toggleSortByAnswers}\n              text={'Answers'}\n              icon={this.state.order === 'asc' ? 'angle-up' : 'angle-down'}\n              active={this.state.sortingMethod === 'answers'}\n            />\n            <Toggle\n              clickHandler={this.toggleSortByTimestamp}\n              text={\"Date\"}\n              icon={this.state.order === 'asc' ? 'angle-up' : 'angle-down'}\n              active={this.state.sortingMethod === 'chronological'}\n            />\n            <Toggle\n              clickHandler={this.sortShuffle}\n              text=\"Shuffle\" icon=\"random\"\n              active={this.state.sortingMethod === 'shuffle'}\n            />\n            <Toggle\n              clickHandler={this.sortRotate}\n              text=\"Rotate\" icon=\"refresh\"\n              active={this.state.sortingMethod === 'rotate'}\n            />\n          </div>\n        </header>\n        <div>\n          <FlipMove\n            staggerDurationBy=\"30\"\n            duration={500}\n            enterAnimation={this.state.enterLeaveAnimation}\n            leaveAnimation={this.state.enterLeaveAnimation}\n            typeName=\"ul\"\n          >\n            {this.renderQuestions()}\n\n            <QuestionInput\n              key=\"qinput\"\n              view={this.state.view}\n              index={this.state.questions.length}\n              clickHandler={this.newQuestion}\n            />\n            {/* <footer key=\"foot\">\n              <div className=\"abs-right\">\n                <Toggle\n                  clickHandler={() => (\n                    this.moveQuestion('removedQuestions', 'questions')\n                  )}\n                  text=\"Add Item\"\n                  icon=\"plus\"\n                  active={this.state.removedQuestions.length > 0}\n                />\n                <Toggle\n                  clickHandler={() => (\n                    this.moveQuestion('questions', 'removedQuestions')\n                  )}\n                  text=\"Remove Item\"\n                  icon=\"close\"\n                  active={this.state.questions.length > 0}\n                />\n              </div>\n            </footer> */}\n          </FlipMove>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport const QuestionList = withTracked(QuestionListClass);\n\nexport default QuestionList;\n","import moment from 'moment';\nimport React, { Component } from 'react';\n\nexport class Answer extends Component {\n  render() {\n    const listClass = `list-item card ${this.props.view}`;\n    const style = { zIndex: 100 - this.props.index };\n\n    return (\n      <li id={this.props.id} className={listClass} style={style}>\n        <div>\n          <h3>{this.props.title}</h3>\n          <h5>{moment(this.props.timestamp).format('Do MMM, YYYY')}</h5>\n          <h5>Popularity: {this.props.popularity}</h5>\n        </div>\n        {/* <h3>{this.props.popul}</h3> */}\n        <div className=\"button-container\">\n          <button onClick={this.props.upVote}>\n            <i className=\"fa fa-arrow-up\" />\n          </button>\n          <button onClick={this.props.downVote}>\n            <i className=\"fa fa-arrow-down\" />\n          </button>\n          <button onClick={this.props.deleteAnswer}>\n            <i className=\"fa fa-close\" />\n          </button>\n        </div>\n      </li>\n    );\n  }\n}\n\n","import React, { Component } from 'react';\n\nexport class AnswerInput extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newAnswer: \"\"\n    };\n  }\n\n  render() {\n    const listClass = `list-item card ${this.props.view}`;\n    const style = { zIndex: 100 };\n\n    return (\n      <li id=\"qinput\" className={listClass} style={style}>\n        <div className=\"col col-3 input-area\">\n          <h5 className=\"field-name\">New Answer</h5>\n          <div className=\"input\">\n            <input\n              type=\"text\"\n              value={this.state.newAnswer}\n              onChange={ev => this.setState(\n                {\n                  newAnswer: ev.target.value\n                })}\n            />\n          </div>\n        </div>\n        <button\n          disabled={!this.state.newAnswer.trim()}\n          onClick={(_) => {\n            this.props.clickHandler(this.state.newAnswer);\n            this.setState(\n              {\n                newAnswer: \"\"\n              });\n          }}\n        >\n          <i className=\"fa fa-add\" />\n        </button>\n      </li>\n    );\n  }\n}\n","import shuffle from 'lodash/shuffle';\nimport React, { Component } from 'react';\nimport FlipMove from 'react-flip-move';\nimport { Link } from \"react-router-dom\";\nimport { withTracked } from '../../data/questions';\nimport Toggle from '../Toggle.jsx';\nimport { Answer } from './Answer';\nimport { AnswerInput } from './AnswerInput';\nimport './scss/index.scss';\n\n\n// type ViewProps = RouteComponentProps<{ id: number }>;\n\nclass AnswerListClass extends Component {\n  constructor(props) {\n    super(props);\n    let questionId = props.match.params.id\n    this.state = {\n      questionId,\n      view: 'list',\n      order: 'asc',\n      sortingMethod: 'chronological',\n      enterLeaveAnimation: 'accordionVertical',\n      questions: this.props.questionsState.questions,\n      answers: []\n    };\n\n    this.toggleList = this.toggleList.bind(this);\n    this.toggleGrid = this.toggleGrid.bind(this);\n    this.toggleSortByTimestamp = this.toggleSortByTimestamp.bind(this);\n    this.toggleSortByPopularity = this.toggleSortByPopularity.bind(this);\n    this.sortRotate = this.sortRotate.bind(this);\n    this.sortShuffle = this.sortShuffle.bind(this);\n    this.newAnswer = this.newAnswer.bind(this);\n    this.upVoteAnswer = this.upVoteAnswer.bind(this);\n    this.deleteAnswer = this.deleteAnswer.bind(this);\n    this.downVoteAnswer = this.downVoteAnswer.bind(this);\n    this.getAnswers = this.getAnswers.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({ answers: this.getAnswers })\n  }\n\n  getAnswers() {\n    return this.state.questions.find((question) =>\n      question.id.toString() === this.state.questionId.toString()).answers;\n  }\n\n  toggleList() {\n    this.setState({\n      view: 'list',\n      enterLeaveAnimation: 'accordionVertical'\n    });\n  }\n\n  toggleGrid() {\n    this.setState({\n      view: 'grid',\n      enterLeaveAnimation: 'accordionHorizontal'\n    });\n  }\n\n  toggleSortByPopularity() {\n    const sortAsc = (a, b) => a.popularity - b.popularity;\n    const sortDesc = (a, b) => b.popularity - a.popularity;\n\n    this.setState({\n      order: (this.state.order === 'asc' ? 'desc' : 'asc'),\n      sortingMethod: 'popularity',\n      answers: this.state.answers.sort(\n        this.state.order === 'asc' ? sortDesc : sortAsc\n      )\n    });\n  }\n\n  toggleSortByTimestamp() {\n    const sortAsc = (a, b) => a.timestamp - b.timestamp;\n    const sortDesc = (a, b) => b.timestamp - a.timestamp;\n\n    this.setState({\n      order: (this.state.order === 'asc' ? 'desc' : 'asc'),\n      sortingMethod: 'chronological',\n      answers: this.state.answers.sort(\n        this.state.order === 'asc' ? sortDesc : sortAsc\n      )\n    });\n  }\n\n  sortShuffle() {\n    this.setState({\n      sortingMethod: 'shuffle',\n      answers: shuffle(this.state.answers)\n    });\n  }\n\n  sortRotate() {\n    const answers = this.state.answers.slice();\n    answers.unshift(answers.pop())\n\n    this.setState({\n      sortingMethod: 'rotate',\n      answers\n    });\n  }\n\n  renderAnswers() {\n    const answers = this.getAnswers();\n    return answers.map((answer, i) => {\n      return (\n        <Answer\n          key={answer.id}\n          view={this.state.view}\n          index={i}\n          upVote={() => this.upVoteAnswer(answer.id)}\n          downVote={() => this.downVoteAnswer(answer.id)}\n          deleteAnswer={() => this.deleteAnswer(answer.id)}\n          {...answer}\n        />\n      );\n    });\n  }\n\n  newAnswer(answerTitle) {\n    const { dispatch } = this.props;\n    dispatch({\n      questionID: this.state.questionId,\n      answer: answerTitle, type: \"addAnswer\"\n    });\n    const answers = this.getAnswers();\n    this.setState({ answers }); // force call the render function again\n  }\n\n  upVoteAnswer(answerID) {\n    const { dispatch } = this.props;\n    dispatch({\n      questionID: this.state.questionId,\n      answerID: answerID, type: \"upVoteAnswer\"\n    });\n    const answers = this.getAnswers();\n    this.setState({ answers }); // force call the render function again\n  }\n\n  deleteAnswer(answerID) {\n    const { dispatch } = this.props;\n    dispatch({ questionID: this.state.questionId, answerID: answerID, type: \"deleteAnswer\" });\n    const answers = this.getAnswers();\n    this.setState({ answers }); // force call the render function again\n  }\n\n  downVoteAnswer(answerID) {\n    const { dispatch } = this.props;\n\n    dispatch({\n      questionID: this.state.questionId,\n      answerID: answerID, type: \"downVoteAnswer\"\n    });\n    const answers = this.getAnswers();\n    this.setState({ answers }); // force call the render function again\n  }\n\n  render() {\n    let question = this.state.questions.find(q=>q.id.toString()===this.state.questionId);\n    return (\n      <div id=\"answers\" className={this.state.view}>\n        <header id=\"header\">\n          <h2>{`Anwsers for \"${question.title}\" (${question.answers.length})`}</h2>\n        </header>\n        <header>\n          <div className=\"abs-left\">\n            <Link to=\"/\">\n              <Toggle\n                clickHandler={this.toggleGrid}\n                text=\"Back\" icon=\"th\"\n                active={this.state.view === 'grid'}\n              />\n            </Link>\n            <Toggle\n              clickHandler={this.toggleList}\n              text=\"List\" icon=\"list\"\n              active={this.state.view === 'list'}\n            />\n          </div>\n          <div className=\"abs-right\">\n            <Toggle\n              clickHandler={this.toggleSortByPopularity}\n              text={'Popularity'}\n              icon={this.state.order === 'asc' ? 'angle-up' : 'angle-down'}\n              active={this.state.sortingMethod === 'popularity'}\n            />\n            <Toggle\n              clickHandler={this.toggleSortByTimestamp}\n              text={\"Date\"}\n              icon={this.state.order === 'asc' ? 'angle-up' : 'angle-down'}\n              active={this.state.sortingMethod === 'chronological'}\n            />\n            <Toggle\n              clickHandler={this.sortShuffle}\n              text=\"Shuffle\" icon=\"random\"\n              active={this.state.sortingMethod === 'shuffle'}\n            />\n            <Toggle\n              clickHandler={this.sortRotate}\n              text=\"Rotate\" icon=\"refresh\"\n              active={this.state.sortingMethod === 'rotate'}\n            />\n          </div>\n        </header>\n        <div>\n          <FlipMove\n            staggerDurationBy=\"30\"\n            duration={500}\n            enterAnimation={this.state.enterLeaveAnimation}\n            leaveAnimation={this.state.enterLeaveAnimation}\n            typeName=\"ul\"\n          >\n            {this.renderAnswers()}\n\n            <AnswerInput\n              key=\"ainput\"\n              view={this.state.view}\n              index={this.state.answers.length}\n              clickHandler={this.newAnswer}\n            />\n          </FlipMove>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport const AnswerList = withTracked(AnswerListClass);\n\nexport default AnswerList;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route } from 'react-router';\nimport { BrowserRouter } from 'react-router-dom';\nimport Header from './components/Header.jsx';\nimport QuestionList from './components/Question/QuestionList.jsx';\nimport { Provider } from \"./data/questions.jsx\";\nimport './scss/main.scss';\nimport AnswerList from './components/Answer/AnswerList.jsx';\n\n\n\nclass App extends Component {\n  availablePaths() { return this.props.route.childRoutes.map(route => route.path) }\n  currentPath() { return this.props.location.pathname.replace(/^\\//, '') }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header paths={this.availablePaths()} path={this.currentPath()} />\n        <section id=\"main-content\">\n          {this.props.children}\n        </section>\n      </div>\n    );\n  }\n};\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider>\n      <Route path=\"/\" component={App}>\n        <Route component={QuestionList} />\n        <Route path=\"/question/:id\" component={AnswerList} />\n      </Route>\n    </Provider>\n  </BrowserRouter>, document.getElementById('root')\n);\n\n// render((\n//   <Router>\n//     <Route path=\"/\" component={App}>\n//       <Route component={QuestionList} />\n//       {/* <Route path=\"question:id\" component={QuestionDetails} /> */}\n\n//     </Route>\n//   </Router>\n// ), document.getElementById('root'))\n"],"sourceRoot":""}